{"ast":null,"code":"var _jsxFileName = \"/Users/lidar9k/js/react-guide-material/06_control_and_form/src/100_single_checkbox/end/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n// POINT チェックボックスの実装\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [isChecked, setIsChecked] = useState(true);\n\n  // const toggleChecked = (e) => {\n  //   setIsChecked(prevState => !prevState);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"my-check\",\n      children: \"\\u30C1\\u30A7\\u30C3\\u30AF\\uFF1A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"my-check\",\n      checked: isChecked,\n      onChange: () => setIsChecked(prevState => !prevState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isChecked ? \"ON!\" : \"OFF!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Example, \"q68eTZ62AYdTxuW0/uv+R2rihi4=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","Example","isChecked","setIsChecked","prevState"],"sources":["/Users/lidar9k/js/react-guide-material/06_control_and_form/src/100_single_checkbox/end/Example.js"],"sourcesContent":["import { useState } from \"react\";\n\n// POINT チェックボックスの実装\nconst Example = () => {\n  const [isChecked, setIsChecked] = useState(true);\n\n  // const toggleChecked = (e) => {\n  //   setIsChecked(prevState => !prevState);\n  // };\n\n  return (\n    <div>\n      <label htmlFor=\"my-check\">\n        チェック：\n      </label>\n      <input\n        type=\"checkbox\"\n        id=\"my-check\"\n        checked={isChecked}\n        onChange={() => setIsChecked(prevState => !prevState)}\n      />\n      <div>{isChecked ? \"ON!\" : \"OFF!\"}</div>\n    </div>\n  );\n};\n\nexport default Example;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AAAA;AACA,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA;EACA;;EAEA,oBACE;IAAA,wBACE;MAAO,OAAO,EAAC,UAAU;MAAA,UAAC;IAE1B;MAAA;MAAA;MAAA;IAAA,QAAQ,eACR;MACE,IAAI,EAAC,UAAU;MACf,EAAE,EAAC,UAAU;MACb,OAAO,EAAEE,SAAU;MACnB,QAAQ,EAAE,MAAMC,YAAY,CAACC,SAAS,IAAI,CAACA,SAAS;IAAE;MAAA;MAAA;MAAA;IAAA,QACtD,eACF;MAAA,UAAMF,SAAS,GAAG,KAAK,GAAG;IAAM;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACnC;AAEV,CAAC;AAAC,GArBID,OAAO;AAAA,KAAPA,OAAO;AAuBb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}