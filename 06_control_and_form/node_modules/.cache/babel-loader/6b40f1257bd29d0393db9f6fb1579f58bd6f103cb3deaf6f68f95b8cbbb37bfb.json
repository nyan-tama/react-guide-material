{"ast":null,"code":"var _jsxFileName = \"/Users/lidar9k/js/react-guide-material/06_control_and_form/src/010_list_components/end/Example.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst animals = [\"Dog\", \"Cat\", \"Rat\"];\nconst Example = () => {\n  // POINT for文でJSXの配列を作成\n  const animalList = [];\n  for (const animal of animals) {\n    animalList.push( /*#__PURE__*/_jsxDEV(\"li\", {\n      children: animal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }, this));\n  }\n\n  // POINT map関数でJSXの配列を作成\n  const helloAnimals = animals.map(animal => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Hello \", animal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u914D\\u5217\\u306E\\u64CD\\u4F5C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: animals.map(animal => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Hello, \", animal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["animals","Example","animalList","animal","push","helloAnimals","map"],"sources":["/Users/lidar9k/js/react-guide-material/06_control_and_form/src/010_list_components/end/Example.js"],"sourcesContent":["\nconst animals = [\"Dog\", \"Cat\", \"Rat\"];\n\nconst Example = () => {\n  // POINT for文でJSXの配列を作成\n  const animalList = [];\n  for (const animal of animals) {\n    animalList.push(<li>{animal}</li>);\n  }\n\n  // POINT map関数でJSXの配列を作成\n  const helloAnimals = animals.map((animal) => {\n    return <li>Hello {animal}</li>;\n  });\n\n  return (\n    <>\n      <h3>配列の操作</h3>\n      <ul>\n        {/* <li>{animals[0]}</li>\n        <li>{animals[1]}</li>\n        <li>{animals[2]}</li> */}\n        {/* {animalList}\n        {helloAnimals} */}\n        {/* POINT map関数はJSX内に記述可能 */}\n        {animals.map((animal) => <li>Hello, {animal}</li>)}\n      </ul>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;;AACA,MAAMA,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAErC,MAAMC,OAAO,GAAG,MAAM;EACpB;EACA,MAAMC,UAAU,GAAG,EAAE;EACrB,KAAK,MAAMC,MAAM,IAAIH,OAAO,EAAE;IAC5BE,UAAU,CAACE,IAAI,eAAC;MAAA,UAAKD;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM,CAAC;EACpC;;EAEA;EACA,MAAME,YAAY,GAAGL,OAAO,CAACM,GAAG,CAAEH,MAAM,IAAK;IAC3C,oBAAO;MAAA,WAAI,QAAM,EAACA,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAChC,CAAC,CAAC;EAEF,oBACE;IAAA,wBACE;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACd;MAAA,UAOGH,OAAO,CAACM,GAAG,CAAEH,MAAM,iBAAK;QAAA,WAAI,SAAO,EAACA,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAC;MAAA;MAAA;MAAA;IAAA,QAC/C;EAAA,gBACJ;AAEP,CAAC;AAAC,KA1BIF,OAAO;AA4Bb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}