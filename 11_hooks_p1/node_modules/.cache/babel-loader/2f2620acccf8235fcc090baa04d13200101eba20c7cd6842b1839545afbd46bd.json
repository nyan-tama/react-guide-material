{"ast":null,"code":"var _jsxFileName = \"/Users/lidar9k/js/react-guide-material/11_hooks_p1/src/070_practice_useContext/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport Input from \"./components/Input\";\nimport Select from \"./components/Select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reducer = (state, _ref) => {\n  let {\n    operator,\n    data\n  } = _ref;\n  switch (operator) {\n    case \"change\":\n      {\n        const {\n          name,\n          value\n        } = data;\n        return {\n          ...state,\n          [name]: value\n        };\n      }\n    case \"add\":\n      {\n        return {\n          ...state,\n          result: state.a + state.b\n        };\n      }\n    case \"minus\":\n      {\n        return {\n          ...state,\n          result: state.a - state.b\n        };\n      }\n    case \"divide\":\n      {\n        return {\n          ...state,\n          result: state.a / state.b\n        };\n      }\n    case \"multiply\":\n      {\n        return {\n          ...state,\n          result: state.a * state.b\n        };\n      }\n    default:\n      throw new Error(\"operator is invalid\");\n  }\n};\nconst Example = () => {\n  _s();\n  // 初期ステート\n  const initState = {\n    a: 1,\n    b: 2,\n    result: 3,\n    operator: \"divide\"\n  };\n  const [state, dispatch] = useReducer(reducer, initState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      name: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"b\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\u7D50\\u679C\\uFF1A\", state.result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Example, \"ivzsx5aR9qRFuEtyOcndflQiQ1Q=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useReducer","Input","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","reducer","state","_ref","operator","data","name","value","result","a","b","Error","Example","_s","initState","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lidar9k/js/react-guide-material/11_hooks_p1/src/070_practice_useContext/start/Example.js"],"sourcesContent":["import { useReducer } from \"react\";\nimport Input from \"./components/Input\";\nimport Select from \"./components/Select\";\n\n\nconst reducer = (state, { operator, data }) => {\n  switch (operator) {\n    case \"change\": {\n      const { name, value } = data;\n      return { ...state, [name]: value };\n    }\n    case \"add\": {\n      return { ...state, result: state.a + state.b };\n    }\n    case \"minus\": {\n      return { ...state, result: state.a - state.b };\n    }\n    case \"divide\": {\n      return { ...state, result: state.a / state.b };\n    }\n    case \"multiply\": {\n      return { ...state, result: state.a * state.b };\n    }\n    default:\n      throw new Error(\"operator is invalid\");\n  }\n};\n\nconst Example = () => {\n  // 初期ステート\n  const initState = {\n    a: 1,\n    b: 2,\n    result: 3,\n    operator: \"divide\",\n  };\n  const [state, dispatch] = useReducer(reducer, initState);\n\n\n\n\n\n  return (\n    <>\n      {/* propsとしてnameを渡す */}\n      <Input name=\"a\" />\n      <Input name=\"b\" />\n      <Select />\n\n\n\n      <h3>結果：{state.result}</h3>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGzC,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAAC,IAAA,KAAyB;EAAA,IAAvB;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACxC,QAAQC,QAAQ;IACd,KAAK,QAAQ;MAAE;QACb,MAAM;UAAEE,IAAI;UAAEC;QAAM,CAAC,GAAGF,IAAI;QAC5B,OAAO;UAAE,GAAGH,KAAK;UAAE,CAACI,IAAI,GAAGC;QAAM,CAAC;MACpC;IACA,KAAK,KAAK;MAAE;QACV,OAAO;UAAE,GAAGL,KAAK;UAAEM,MAAM,EAAEN,KAAK,CAACO,CAAC,GAAGP,KAAK,CAACQ;QAAE,CAAC;MAChD;IACA,KAAK,OAAO;MAAE;QACZ,OAAO;UAAE,GAAGR,KAAK;UAAEM,MAAM,EAAEN,KAAK,CAACO,CAAC,GAAGP,KAAK,CAACQ;QAAE,CAAC;MAChD;IACA,KAAK,QAAQ;MAAE;QACb,OAAO;UAAE,GAAGR,KAAK;UAAEM,MAAM,EAAEN,KAAK,CAACO,CAAC,GAAGP,KAAK,CAACQ;QAAE,CAAC;MAChD;IACA,KAAK,UAAU;MAAE;QACf,OAAO;UAAE,GAAGR,KAAK;UAAEM,MAAM,EAAEN,KAAK,CAACO,CAAC,GAAGP,KAAK,CAACQ;QAAE,CAAC;MAChD;IACA;MACE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EAAC;AAE7C,CAAC;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAMC,SAAS,GAAG;IAChBL,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJF,MAAM,EAAE,CAAC;IACTJ,QAAQ,EAAE;EACZ,CAAC;EACD,MAAM,CAACF,KAAK,EAAEa,QAAQ,CAAC,GAAGrB,UAAU,CAACO,OAAO,EAAEa,SAAS,CAAC;EAMxD,oBACEhB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBAEElB,OAAA,CAACH,KAAK;MAACW,IAAI,EAAC;IAAG;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClBtB,OAAA,CAACH,KAAK;MAACW,IAAI,EAAC;IAAG;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClBtB,OAAA,CAACF,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAIVtB,OAAA;MAAAkB,QAAA,GAAI,oBAAG,EAACd,KAAK,CAACM,MAAM;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA,gBACzB;AAEP,CAAC;AAACP,EAAA,CA1BID,OAAO;AAAAS,EAAA,GAAPT,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}