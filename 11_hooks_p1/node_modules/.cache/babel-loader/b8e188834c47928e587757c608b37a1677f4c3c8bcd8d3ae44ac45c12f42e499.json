{"ast":null,"code":"var _jsxFileName = \"/Users/lidar9k/js/react-guide-material/11_hooks_p1/src/070_practice_useContext/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CALC_OPTIONS = [\"add\", \"minus\", \"divide\", \"multiply\"];\n\n// reducer関数の定義\n// useReducerフックを利用して、状態管理にreducer関数を利用しています。\n// このアプリでは、changeと四則演算用のアクションを定義し、それぞれのアクションに対して、状態の更新を行っています。\n\n// stateは、現在の状態を表すオブジェクトで、reducer関数の中で状態の更新が行われます。\n// { type, payload } は、dispatchされたアクションオブジェクトです。\n// アクションオブジェクトは、状態を変更するための指示となるもので、typeプロパティと任意のプロパティを持つことができます。\n// typeプロパティは、アクションの種類を表す文字列です。\nconst reducer = (state, _ref) => {\n  let {\n    operator,\n    data\n  } = _ref;\n  switch (operator) {\n    case \"change\":\n      {\n        const {\n          name,\n          value\n        } = data;\n        return {\n          ...state,\n          [name]: value\n        };\n      }\n    case \"add\":\n      {\n        return {\n          ...state,\n          result: state.a + state.b\n        };\n      }\n    case \"minus\":\n      {\n        return {\n          ...state,\n          result: state.a - state.b\n        };\n      }\n    case \"divide\":\n      {\n        return {\n          ...state,\n          result: state.a / state.b\n        };\n      }\n    case \"multiply\":\n      {\n        return {\n          ...state,\n          result: state.a * state.b\n        };\n      }\n    default:\n      throw new Error(\"operator is invalid\");\n  }\n};\nconst Example = () => {\n  _s();\n  // useStateフックを使って、初期状態をinitStateとして設定し、\n  // useReducerフックを使って、現在の状態をstate、状態更新用のdispatch関数を取得しています。\n  // また、calculate関数とnumChangeHandler関数を定義しています。\n\n  const initState = {\n    a: 1,\n    b: 2,\n    result: 3,\n    type: \"minus\"\n  };\n  // reducer関数は、現在の状態と、dispatchされたアクションを受け取り、新しい状態を返す関数です。\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  // 四則演算の選択には、calculate関数が利用されます。\n  //この場合、e.target.valueは、選択された選択肢の値を表します。\n  const calculate = e => {\n    dispatch({\n      operator: e.target.value\n    });\n  };\n\n  // 数値の入力には、numChangeHandler関数が利用されます。\n  const numChangeHandler = e => {\n    dispatch({\n      operator: 'change',\n      data: {\n        name: e.target.name,\n        value: e.target.value\n      }\n    });\n  };\n  return (\n    /*#__PURE__*/\n    /* 完成系のJSX */\n    // <CalcProvider>\n    //   <Input name=\"a\"/>      \n    //   <Input name=\"b\" />      \n    //   <Select />\n    //   <Result />      \n    // </CalcProvider>\n    // 四則演算の種類と数値の入力用のinput要素、そして結果表示用のh3要素をJSXで記述しています。\n    // また、select要素には、四則演算の種類を選択するための選択肢をCALC_OPTIONS定数から生成しています。　　　\n    //  数値の入力と四則演算の選択を行うと、それに応じて結果が表示されます。\n    // 結果の表示には、現在の状態のresultプロパティを表示しています。\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"a\",\n          value: state.a,\n          onChange: numChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"b:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"b\",\n          value: state.b,\n          onChange: numChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: state.operator,\n        name: \"operator\",\n        onChange: calculate,\n        children: CALC_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u7D50\\u679C\\uFF1A\", state.result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n};\n_s(Example, \"ivzsx5aR9qRFuEtyOcndflQiQ1Q=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","CALC_OPTIONS","reducer","state","_ref","operator","data","name","value","result","a","b","Error","Example","_s","initState","type","dispatch","calculate","e","target","numChangeHandler","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","option","_c","$RefreshReg$"],"sources":["/Users/lidar9k/js/react-guide-material/11_hooks_p1/src/070_practice_useContext/start/Example.js"],"sourcesContent":["import { useReducer } from \"react\";\n\nconst CALC_OPTIONS = [\"add\", \"minus\", \"divide\", \"multiply\"];\n\n// reducer関数の定義\n// useReducerフックを利用して、状態管理にreducer関数を利用しています。\n// このアプリでは、changeと四則演算用のアクションを定義し、それぞれのアクションに対して、状態の更新を行っています。\n\n// stateは、現在の状態を表すオブジェクトで、reducer関数の中で状態の更新が行われます。\n// { type, payload } は、dispatchされたアクションオブジェクトです。\n// アクションオブジェクトは、状態を変更するための指示となるもので、typeプロパティと任意のプロパティを持つことができます。\n// typeプロパティは、アクションの種類を表す文字列です。\nconst reducer = (state, { operator, data }) => {\n  switch (operator) {\n    case \"change\": {\n      const { name, value } = data;\n      return { ...state, [name]: value };\n    }\n    case \"add\": {\n      return { ...state, result: state.a + state.b };\n    }\n    case \"minus\": {\n      return { ...state, result: state.a - state.b };\n    }\n    case \"divide\": {\n      return { ...state, result: state.a / state.b };\n    }\n    case \"multiply\": {\n      return { ...state, result: state.a * state.b };\n    }\n    default:\n      throw new Error(\"operator is invalid\");\n  }\n};\n\nconst Example = () => {\n  // useStateフックを使って、初期状態をinitStateとして設定し、\n  // useReducerフックを使って、現在の状態をstate、状態更新用のdispatch関数を取得しています。\n  // また、calculate関数とnumChangeHandler関数を定義しています。\n\n  const initState = {\n    a: 1,\n    b: 2,\n    result: 3,\n    type: \"minus\",\n  };\n  // reducer関数は、現在の状態と、dispatchされたアクションを受け取り、新しい状態を返す関数です。\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  // 四則演算の選択には、calculate関数が利用されます。\n  //この場合、e.target.valueは、選択された選択肢の値を表します。\n  const calculate = (e) => {\n    dispatch({ operator: e.target.value });\n  };\n\n  // 数値の入力には、numChangeHandler関数が利用されます。\n  const numChangeHandler = (e) => {\n    dispatch({ operator: 'change', data: { name: e.target.name, value: e.target.value } });\n  };\n  return (\n    /* 完成系のJSX */\n    // <CalcProvider>\n    //   <Input name=\"a\"/>      \n    //   <Input name=\"b\" />      \n    //   <Select />\n    //   <Result />      \n    // </CalcProvider>\n    // 四則演算の種類と数値の入力用のinput要素、そして結果表示用のh3要素をJSXで記述しています。\n    // また、select要素には、四則演算の種類を選択するための選択肢をCALC_OPTIONS定数から生成しています。　　　\n    //  数値の入力と四則演算の選択を行うと、それに応じて結果が表示されます。\n    // 結果の表示には、現在の状態のresultプロパティを表示しています。\n    <>\n      <div>\n        a:\n        <input\n          type=\"number\"\n          name=\"a\"\n          value={state.a}\n          onChange={numChangeHandler}\n        />\n      </div>\n      <div>\n        b:\n        <input\n          type=\"number\"\n          name=\"b\"\n          value={state.b}\n          onChange={numChangeHandler}\n        />\n      </div>\n      <select value={state.operator} name=\"operator\" onChange={calculate}>\n        {CALC_OPTIONS.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n      <h3>結果：{state.result}</h3>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}