{"ast":null,"code":"var _jsxFileName = \"/Users/lidar9k/js/react-guide-material/11_hooks_p1/src/070_practice_useContext/start/components/Input.js\",\n  _s = $RefreshSig$();\nimport { useCalc, useCalcDispatch } from '../context/CalcContext';\n\n//props: nameを受け取る\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = _ref => {\n  _s();\n  let {\n    name\n  } = _ref;\n  const state = useCalc();\n  const dispatch = useCalcDispatch();\n  // dataはなくもいいが、アクションとデータを分けておくとわかりやすいので分けておく\n  const numChangeHandler = e => {\n    dispatch({\n      operator: 'change',\n      data: {\n        name: e.target.name,\n        value: e.target.value\n      }\n    });\n  };\n\n  // name動的に変わるので、[]で囲む\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: name,\n      value: state[name],\n      onChange: numChageHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(Input, \"++jSX1OkYKKCsfayqmRxKQedg8E=\", false, function () {\n  return [useCalc, useCalcDispatch];\n});\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["useCalc","useCalcDispatch","jsxDEV","_jsxDEV","Input","_ref","_s","name","state","dispatch","numChangeHandler","e","operator","data","target","value","children","type","onChange","numChageHandler","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lidar9k/js/react-guide-material/11_hooks_p1/src/070_practice_useContext/start/components/Input.js"],"sourcesContent":["import { useCalc, useCalcDispatch } from '../context/CalcContext';\n\n//props: nameを受け取る\nconst Input = ({ name }) => {\n    const state = useCalc();\n    const dispatch = useCalcDispatch();\n    // dataはなくもいいが、アクションとデータを分けておくとわかりやすいので分けておく\n    const numChangeHandler = (e) => {\n        dispatch({ operator: 'change', data: { name: e.target.name, value: e.target.value } });\n    };\n\n\n    // name動的に変わるので、[]で囲む\n    return (\n        <div>\n            {name}:\n            <input type=\"number\"\n                name={name}\n                value={state[name]}\n                onChange={numChageHandler} />\n        </div>\n    )\n}\n\nexport default Input;"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,eAAe,QAAQ,wBAAwB;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACnB,MAAMG,KAAK,GAAGR,OAAO,EAAE;EACvB,MAAMS,QAAQ,GAAGR,eAAe,EAAE;EAClC;EACA,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC5BF,QAAQ,CAAC;MAAEG,QAAQ,EAAE,QAAQ;MAAEC,IAAI,EAAE;QAAEN,IAAI,EAAEI,CAAC,CAACG,MAAM,CAACP,IAAI;QAAEQ,KAAK,EAAEJ,CAAC,CAACG,MAAM,CAACC;MAAM;IAAE,CAAC,CAAC;EAC1F,CAAC;;EAGD;EACA,oBACIZ,OAAA;IAAAa,QAAA,GACKT,IAAI,EAAC,GACN,eAAAJ,OAAA;MAAOc,IAAI,EAAC,QAAQ;MAChBV,IAAI,EAAEA,IAAK;MACXQ,KAAK,EAAEP,KAAK,CAACD,IAAI,CAAE;MACnBW,QAAQ,EAAEC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/B;AAEd,CAAC;AAAAjB,EAAA,CAnBKF,KAAK;EAAA,QACOJ,OAAO,EACJC,eAAe;AAAA;AAAAuB,EAAA,GAF9BpB,KAAK;AAqBX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}