{"ast":null,"code":"var _jsxFileName = \"/Users/lidar9k/js/react-guide-material/05_state_and_event/src/090_practice_state_props/start/Example.js\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u7DF4\\u7FD2\\u554F\\u984C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u30AB\\u30A6\\u30F3\\u30C8\\u306E\\u66F4\\u65B0\\uFF08CountUpdate\\uFF09\\u3068\\u8868\\u793A\\uFF08CountResult\\uFF09\\u3092\\u5225\\u306E\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u306B\\u5206\\u96E2\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002Example\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u5185\\u3067\\u73FE\\u5728\\u306E\\u30AB\\u30A6\\u30F3\\u30C8\\u306E\\u5024\\u3092\\u7BA1\\u7406\\u3059\\u308Bstate\\u3092\\u4E00\\u3064\\u5B9A\\u7FA9\\u3057\\u3066\\u3053\\u308C\\u307E\\u3067\\u306E\\u30EC\\u30AF\\u30C1\\u30E3\\u30FC\\u3067\\u5B9F\\u88C5\\u3057\\u305F\\u3088\\u3046\\u306A\\u30AB\\u30A6\\u30F3\\u30BF\\u30FC\\u3092\\u4F5C\\u6210\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Example;\nconst CountResult = ( /* propsを定義 */) => /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 41\n}, this);\n_c2 = CountResult;\nconst CountUpdate = ( /* propsを定義 */\n) => {\n  const countUp = () => {\n    /* countに1追加 */\n  };\n  const countDown = () => {\n    /* countから1マイナス */\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countUp,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countDown,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c3 = CountUpdate;\nexport default Example;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"CountResult\");\n$RefreshReg$(_c3, \"CountUpdate\");","map":{"version":3,"names":["useState","Example","CountResult","CountUpdate","countUp","countDown"],"sources":["/Users/lidar9k/js/react-guide-material/05_state_and_event/src/090_practice_state_props/start/Example.js"],"sourcesContent":["import { useState } from 'react';\n\nconst Example = () => {\n  return (\n    <>\n      <h3>練習問題</h3>\n      <p>カウントの更新（CountUpdate）と表示（CountResult）を別のコンポーネントに分離してください。Exampleコンポーネント内で現在のカウントの値を管理するstateを一つ定義してこれまでのレクチャーで実装したようなカウンターを作成してください。</p>\n      {/* このコメントアウトを外して利用！\n        <CountResult title=\"カウント\" />\n        <CountUpdate /> \n      */}\n    </>\n  );\n};\nconst CountResult = (/* propsを定義 */) => <h3>{/* propsのtitleとcountの値を表示 */}</h3>\n\nconst CountUpdate = (/* propsを定義 */) => {\n  const countUp = () => {\n    /* countに1追加 */\n  };\n  const countDown = () => {\n    /* countから1マイナス */\n  };\n  return (\n    <>\n      <button onClick={countUp}>+</button>\n      <button onClick={countDown}>-</button>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,MAAMC,OAAO,GAAG,MAAM;EACpB,oBACE;IAAA,wBACE;MAAA,UAAI;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,eACb;MAAA,UAAG;IAAmI;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA,gBAKzI;AAEP,CAAC;AAAC,KAXIA,OAAO;AAYb,MAAMC,WAAW,GAAG,EAAC,gCAAmB;EAAA;EAAA;EAAA;AAAA,QAAuC;AAAA,MAAzEA,WAAW;AAEjB,MAAMC,WAAW,GAAG,EAAC;AAAA,KAAmB;EACtC,MAAMC,OAAO,GAAG,MAAM;IACpB;EAAA,CACD;EACD,MAAMC,SAAS,GAAG,MAAM;IACtB;EAAA,CACD;EACD,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAED,OAAQ;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS,eACpC;MAAQ,OAAO,EAAEC,SAAU;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBACrC;AAEP,CAAC;AAAC,MAbIF,WAAW;AAejB,eAAeF,OAAO;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}