{"ast":null,"code":"var _jsxFileName = \"/Users/lidar9k/js/react-guide-material/05_state_and_event/src/090_practice_state_props/end/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CountResult, {\n      title: \"\\u30AB\\u30A6\\u30F3\\u30C8\",\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CountUpdate, {\n      setCount: setCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Example, \"0y9ihJAcKCc4PLtrSDVu6q2+erM=\");\n_c = Example;\nconst CountResult = _ref => {\n  let {\n    title,\n    count\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [title, \": \", count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 45\n  }, this);\n};\n_c2 = CountResult;\nconst CountUpdate = _ref2 => {\n  let {\n    setCount\n  } = _ref2;\n  const countUp = () => {\n    setCount(prev => prev + 1);\n  };\n  const countDown = () => {\n    setCount(prev => prev - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countUp,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countDown,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c3 = CountUpdate;\nexport default Example;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"CountResult\");\n$RefreshReg$(_c3, \"CountUpdate\");","map":{"version":3,"names":["useState","Example","count","setCount","CountResult","title","CountUpdate","countUp","prev","countDown"],"sources":["/Users/lidar9k/js/react-guide-material/05_state_and_event/src/090_practice_state_props/end/Example.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Example = () => {\n    const [ count, setCount ] = useState(0);\n\n    return (\n      <>\n        <CountResult title=\"カウント\" count={count} />\n        <CountUpdate setCount={setCount} />\n      </>\n    );\n  };\n  const CountResult = ({ title, count }) => <h3>{title}: {count}</h3>\n\n  const CountUpdate = ({ setCount }) => {\n    const countUp = () => {\n        setCount(prev => prev + 1);\n    };\n    const countDown = () => {\n        setCount(prev => prev - 1);\n    };\n    return (\n      <>\n        <button onClick={countUp}>+</button>\n        <button onClick={countDown}>-</button>\n      </>\n    );\n  };\n  \n  export default Example;\n  "],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,MAAMC,OAAO,GAAG,MAAM;EAAA;EAClB,MAAM,CAAEC,KAAK,EAAEC,QAAQ,CAAE,GAAGH,QAAQ,CAAC,CAAC,CAAC;EAEvC,oBACE;IAAA,wBACE,QAAC,WAAW;MAAC,KAAK,EAAC,0BAAM;MAAC,KAAK,EAAEE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1C,QAAC,WAAW;MAAC,QAAQ,EAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAClC;AAEP,CAAC;AAAC,GATEF,OAAO;AAAA,KAAPA,OAAO;AAUX,MAAMG,WAAW,GAAG;EAAA,IAAC;IAAEC,KAAK;IAAEH;EAAM,CAAC;EAAA,oBAAK;IAAA,WAAKG,KAAK,EAAC,IAAE,EAACH,KAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM;AAAA;AAAA,MAA7DE,WAAW;AAEjB,MAAME,WAAW,GAAG,SAAkB;EAAA,IAAjB;IAAEH;EAAS,CAAC;EAC/B,MAAMI,OAAO,GAAG,MAAM;IAClBJ,QAAQ,CAACK,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EAC9B,CAAC;EACD,MAAMC,SAAS,GAAG,MAAM;IACpBN,QAAQ,CAACK,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EAC9B,CAAC;EACD,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAED,OAAQ;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS,eACpC;MAAQ,OAAO,EAAEE,SAAU;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBACrC;AAEP,CAAC;AAAC,MAbIH,WAAW;AAejB,eAAeL,OAAO;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}